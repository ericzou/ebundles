<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    <dict>
        <key>beforeRunningCommand</key>
        <string>nop</string>
        <key>command</key>
        <string>#!/usr/bin/ruby&#x0A;# Offers spelling alternatives for current word.&#x0A;# You MUST have aspell installed for this to work.&#x0A;# Ruby version for e By Geoff Cheshire&#x0A;# Based on work from Haris Skiadas (http://skiadas.dcostanet.net)&#x0A;# Version 2.1.0&#x0A;require ENV[&apos;TM_SUPPORT_PATH&apos;] + &quot;/lib/exit_codes.rb&quot;&#x0A;&#x0A;unless File.exists?(&quot;/usr/bin/aspell&quot;)&#x0A;  print &quot;Error: You must install aspell via the cygwin installer prior to running this command.&quot;&#x0A;  TextMate.exit_show_tool_tip&#x0A;end&#x0A;&#x0A;selection = STDIN.read&#x0A;COCOA_DIALOG = &quot;#{ENV[&apos;TM_SUPPORT_PATH&apos;]}/bin/CocoaDialog.exe&quot;&#x0A;&#x0A;unless File.exists?(COCOA_DIALOG)&#x0A;  print &quot;Error: #{COCOA_DIALOG} not found.  Please install wxCocoaDialog.&quot;&#x0A;  TextMate.exit_show_tool_tip&#x0A;end&#x0A;&#x0A;word = selection.match(/\w+&apos;?\w*/)[0]&#x0A;result = %x[aspell &lt;&lt;&lt;#{word.gsub(/&apos;/, &quot;\\\\\\0&quot;)} -a --mode=none].split(&quot;\n&quot;)[1].split&#x0A;&#x0A;case result[0]&#x0A;when &apos;*&apos;&#x0A;  TextMate.exit_discard if result[0] == &quot;*&quot;&#x0A;when &apos;#&apos;&#x0A;  print &quot;#{word} did not appear in the dictionary, but there are no suggestions.&quot;&#x0A;  TextMate.exit_show_tool_tip&#x0A;when &apos;&amp;&apos;&#x0A;  suggestions = result[4..result.length].join(&quot; &quot;).delete(&quot;,&quot;)&#x0A;  choice=%x(&quot;#{COCOA_DIALOG}&quot; dropdown \&#x0A;    --title &quot;Misspelled Word&quot; \&#x0A;    --text &quot;There are #{result[2]} suggestions for &apos;#{result[1]}&apos;:&quot; \&#x0A;    --string-output \&#x0A;    --items #{suggestions.gsub(/&apos;/, &quot;\\\\\\0&quot;)} \&#x0A;    --button1 &quot;Replace&quot; --button2 &quot;Cancel&quot; --button3 &quot;Add to dictionary&quot;)&#x0A;  button, replacement = choice.split&#x0A;  case button&#x0A;    when &quot;Replace&quot;&#x0A;      print selection.gsub(/^#{word}/, replacement)&#x0A;      exit&#x0A;    when &quot;Add&quot;&#x0A;      `echo -e &quot;*#{word}\n#&quot; | aspell -a`&#x0A;      print &quot;Added &apos;#{word}&apos; to your personal dictionary.&quot;&#x0A;      TextMate.exit_show_tool_tip&#x0A;  end&#x0A;end&#x0A;TextMate.exit_discard</string>
        <key>fallbackInput</key>
        <string>word</string>
        <key>input</key>
        <string>selection</string>
        <key>name</key>
        <string>Check Spelling of Word/Selection</string>
        <key>output</key>
        <string>replaceSelectedText</string>
        <key>keyEquivalent</key>
        <string>@;</string>
        <key>uuid</key>
        <string>DF1BEA6F-02E4-4220-B1E0-9DDC06CACA7F</string>
    </dict>
</plist>
