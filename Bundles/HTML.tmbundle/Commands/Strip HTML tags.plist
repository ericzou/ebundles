<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
    <string>#!/usr/bin/env ruby -w
require ENV['TM_BUNDLE_SUPPORT'] + "/lib/tokenizer.rb"
require ENV['TM_BUNDLE_SUPPORT'] + "/lib/node.rb"

def strip_tags(html)
  return html if html.empty? || !html.include?('&lt;')
  output = ""
  tokenizer = HTML::Tokenizer.new(html)
  while token = tokenizer.next
    node = HTML::Node.parse(nil, 0, 0, token, false)
    output += token unless (node.kind_of? HTML::Tag) or (token =~ /^&lt;!/)
  end
  return output
end

print strip_tags(STDIN.read)</string>
	<key>fallbackInput</key>
	<string>document</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string></string>
	<key>name</key>
	<string>Strip HTML Tags from Document / Selection</string>
	<key>output</key>
	<string>replaceSelectedText</string>
	<key>scope</key>
	<string>text.html</string>
	<key>uuid</key>
	<string>20D760B5-A127-11D9-A5A2-000D93C8BE28</string>
</dict>
</plist>
