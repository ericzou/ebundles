<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    <dict>
        <key>name</key>
        <string>Get Snippet</string>
        <key>uuid</key>
        <string>D9E343A9-A23D-4601-85C4-BB463A55FE78</string>
        <key>input</key>
        <string>none</string>
        <key>output</key>
        <string>insertAsSnippet</string>
        <key>command</key>
        <string>#!/usr/bin/env ruby -w&#x0A;require &quot;xmlrpc/client&quot;&#x0A;require &quot;cgi&quot;&#x0A;require ENV[&apos;TM_SUPPORT_PATH&apos;] + &quot;/lib/exit_codes.rb&quot;&#x0A;require ENV[&apos;TM_SUPPORT_PATH&apos;] + &quot;/lib/escape.rb&quot;&#x0A;require ENV[&apos;TM_BUNDLE_SUPPORT&apos;] + &quot;/api_key.rb&quot;&#x0A;&#x0A;&#x0A;COCOA_DIALOG = ENV[&apos;TM_SUPPORT_PATH&apos;] + &apos;/bin/CocoaDialog&apos;&#x0A;unless File.exists?(COCOA_DIALOG)&#x0A;  print &quot;Error: wxCocoaDialog not found&quot;&#x0A;  TextMate.exit_show_tool_tip&#x0A;end&#x0A;&#x0A;server = XMLRPC::Client.new( &quot;snipplr.com&quot;, &quot;/xml-rpc.php&quot;)&#x0A;&#x0A;if 0 == server.call(&quot;user.checkkey&quot;, API_KEY)&#x0A;  puts &quot;#{API_KEY} was not accepted as a valid API Key&quot;&#x0A;  TextMate.exit_show_tool_tip&#x0A;end&#x0A;&#x0A;begin&#x0A;  result = server.call(&quot;snippet.list&quot;, API_KEY)&#x0A;  result_list = &quot;&quot;&#x0A;  result.each { |row| result_list += &quot;&apos;#{row[&apos;id&apos;]} : #{row[&apos;title&apos;]}&apos; &quot; }&#x0A;  &#x0A;  res=%x(&quot;#{COCOA_DIALOG}&quot; dropdown \&#x0A;      --title &quot;Retrieve Snippet&quot; \&#x0A;      --string-output \&#x0A;      --text &quot;You have #{result.length} Snipplr entries stored under this API Key.&quot; \&#x0A;      --items #{result_list} \&#x0A;      --button1 &apos;Retreive&apos; --button2 &apos;Cancel&apos;)&#x0A;  button, item = res.split&#x0A;  case button&#x0A;    when &apos;Retreive&apos;&#x0A;      $snippet = server.call(&quot;snippet.get&quot;, item)&#x0A;    when &apos;Cancel&apos;&#x0A;      puts &quot;Snippet retreival cancelled.&quot;&#x0A;      TextMate.exit_show_tool_tip&#x0A;  end &#x0A;  puts e_sn(CGI::unescapeHTML($snippet[&apos;source&apos;]))&#x0A;  &#x0A;rescue XMLRPC::FaultException =&gt; err&#x0A;  if err.faultString =~ /No snippets found/ &#x0A;    print &quot;You don&apos;t have any snippets yet!&quot; &#x0A;  else &#x0A;    print &quot;Error: &quot; + err.faultCode.to_s + &quot;, &quot; + err.faultString&#x0A;  end&#x0A;  TextMate.exit_show_tool_tip&#x0A;rescue&#x0A;  print &quot;Error: #{$!}&quot;&#x0A;  TextMate.exit_show_tool_tip&#x0A;end</string>
        <key>keyEquivalent</key>
        <string>~p</string>
    </dict>
</plist>
