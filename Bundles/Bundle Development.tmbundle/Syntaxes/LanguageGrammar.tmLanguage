<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>textmate</string>
	</array>
	<key>firstLineMatch</key>
	<string>^\{\s*scopeName = .*$</string>
	<key>foldingStartMarker</key>
	<string>^\s*([a-zA-Z_-]+ = )?[{(](?!.*[)}][;,]?\s*$)</string>
	<key>foldingStopMarker</key>
	<string>^\s*(\}|\))</string>
	<key>keyEquivalent</key>
	<string>^~L</string>
	<key>name</key>
	<string>Language Grammar</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>(\{)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.dictionary.tm-grammar</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(scopeName)\s*(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant.tm-grammar</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.dictionary.tm-grammar</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>scopeName</string>
					<key>end</key>
					<string>(;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.dictionary.tm-grammar</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.value-pair.scopename.tm-grammar</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#scope-root</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#catch-all</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(fileTypes)\s*(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant.tm-grammar</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.tm-grammar</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>fileTypes</string>
					<key>end</key>
					<string>(;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.dictionary.tm-grammar</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.array.tm-grammar</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comment</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?=[^\s,])</string>
									<key>end</key>
									<string>(,)|(?=\))</string>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.array.tm-grammar</string>
										</dict>
									</dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#comment</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\s+(?=//|/\*)</string>
										</dict>
										<dict>
											<key>begin</key>
											<string>[[^\n]&amp;&amp;\s](?!\s*(,|\)|$)).*</string>
											<key>end</key>
											<string>^$not possible$^</string>
											<key>name</key>
											<string>invalid.illegal.missing-comma.tm-grammar</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#string</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#catch-all</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(firstLineMatch|folding(Start|Stop)Marker)\s*(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant.tm-grammar</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.tm-grammar</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>firstLineMatch, foldingStartMarker, foldingStopMarker</string>
					<key>end</key>
					<string>(;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.dictionary.tm-grammar</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regexp</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#catch-all</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#patterns</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(repository)\s*(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant.repository.tm-grammar</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.tm-grammar</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>repository</string>
					<key>end</key>
					<string>(;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.dictionary.tm-grammar</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.dictionary.repository.tm-grammar</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\{)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.dictionary.tm-grammar</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comment</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(["']?)([-a-zA-Z0-9._]+)\1\s*(=)</string>
									<key>beginCaptures</key>
									<dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>entity.name.section.repository.tm-grammar</string>
										</dict>
										<key>3</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.key-value.tm-grammar</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(;)</string>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.terminator.dictionary.tm-grammar</string>
										</dict>
									</dict>
									<key>name</key>
									<string>meta.value-pair.repository-item.tm-grammar</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#comment</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#rule</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#catch-all</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#string</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(=)</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.key-value.tm-grammar</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(;)</string>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.terminator.dictionary.tm-grammar</string>
										</dict>
									</dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#any</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>match</key>
									<string>;</string>
									<key>name</key>
									<string>punctuation.terminator.dictionary.tm-grammar</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#catch-all</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#invalid-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.tm-grammar</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.dictionary.tm-grammar</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#any</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>punctuation.terminator.dictionary.tm-grammar</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#catch-all</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>any</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#array</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dictionary</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#catch-all</string>
				</dict>
			</array>
		</dict>
		<key>array</key>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.array.tm-grammar</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=[^\s,])</string>
					<key>end</key>
					<string>(,)|(?=\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.array.tm-grammar</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\s+(?=//|/\*)</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>[[^\n]&amp;&amp;\s](?!\s*(,|\)|$)).*</string>
							<key>end</key>
							<string>^$not possible$^</string>
							<key>name</key>
							<string>invalid.illegal.missing-comma.tm-grammar</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#catch-all</string>
				</dict>
			</array>
		</dict>
		<key>catch-all</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\s+</string>
				</dict>
				<dict>
					<key>match</key>
					<string>.</string>
					<key>name</key>
					<string>invalid.illegal.unrecognized-character.tm-grammar</string>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.tm-grammar</string>
				</dict>
				<dict>
					<key>match</key>
					<string>//.*$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash.tm-grammar</string>
				</dict>
			</array>
		</dict>
		<key>comment-keyword</key>
		<dict>
			<key>begin</key>
			<string>\b(comment)\s*(=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.constant.tm-grammar</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value.tm-grammar</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.dictionary.tm-grammar</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>applyEndPatternLast</key>
					<integer>1</integer>
					<key>begin</key>
					<string>(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.tm-grammar</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>comment.block.string.tm-grammar</string>
					<key>end</key>
					<string>(')(?!')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.tm-grammar</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.tm-grammar</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>''</string>
							<key>name</key>
							<string>constant.character.escape.apostrophe.tm-grammar</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.tm-grammar</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>comment.block.string.tm-grammar</string>
					<key>end</key>
					<string>(")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.tm-grammar</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.tm-grammar</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\[\\"]</string>
							<key>name</key>
							<string>constant.character.escape.tm-grammar</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#catch-all</string>
				</dict>
			</array>
		</dict>
		<key>dictionary</key>
		<dict>
			<key>begin</key>
			<string>(\{)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.dictionary.tm-grammar</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.tm-grammar</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.dictionary.tm-grammar</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#any</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>punctuation.terminator.dictionary.tm-grammar</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#catch-all</string>
				</dict>
			</array>
		</dict>
		<key>invalid-keyword</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(fileTypes|foldingStartMarker|foldingStopMarker|patterns|match|begin|end|include|scopeName|captures|beginCaptures|endCaptures|firstLineMatch|comment|repository|disabled|contentName|applyEndPatternLast)\b(?=\s*=)</string>
					<key>name</key>
					<string>invalid.illegal.constant.misplaced-keyword.tm-grammar</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(swallow|mode)\b(?=\s*=)</string>
					<key>name</key>
					<string>invalid.deprecated.constant.tm-grammar</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(foregroundColor|backgroundColor|fontStyle|elementForegroundColor|elementBackgroundColor|elementFontStyle|highlightPairs|smartTypingPairs|increaseIndentPattern)\b(?=\s*=)</string>
					<key>name</key>
					<string>invalid.illegal.constant.outdated.tm-grammar</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[-a-zA-Z_.]+(?=\s*=)</string>
					<key>name</key>
					<string>invalid.illegal.constant.unknown-keyword.tm-grammar</string>
				</dict>
			</array>
		</dict>
		<key>patterns</key>
		<dict>
			<key>begin</key>
			<string>\b(patterns)\s*(=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.constant.tm-grammar</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value.tm-grammar</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.dictionary.tm-grammar</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.array.patterns.tm-grammar</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.array.tm-grammar</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?=[^\s,])</string>
							<key>end</key>
							<string>(,)|(?=\))</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.array.tm-grammar</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comment</string>
								</dict>
								<dict>
									<key>match</key>
									<string>\s+(?=//|/\*)</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>[[^\n]&amp;&amp;\s](?!\s*(,|\)|$)).*</string>
									<key>end</key>
									<string>^$not possible$^</string>
									<key>name</key>
									<string>invalid.illegal.missing-comma.tm-grammar</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#rule</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#catch-all</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#catch-all</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#catch-all</string>
				</dict>
			</array>
		</dict>
		<key>regexp</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.tm-grammar</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(')(?!')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.tm-grammar</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.regexp.oniguruma.single.tm-grammar</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>''</string>
							<key>name</key>
							<string>constant.character.escape.apostrophe.tm-grammar</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.regexp.oniguruma</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.tm-grammar</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.tm-grammar</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.regexp.oniguruma.double.tm-grammar</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\\\|\\"</string>
							<key>name</key>
							<string>constant.character.escape.tm-grammar</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.regexp.oniguruma</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>rule</key>
		<dict>
			<key>begin</key>
			<string>(\{)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.dictionary.tm-grammar</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>name</key>
			<string>meta.dictionary.rule.tm-grammar</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b((contentN|n)ame)\s*(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant.tm-grammar</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.tm-grammar</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>name, contentName</string>
					<key>end</key>
					<string>(;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.dictionary.tm-grammar</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.value-pair.tm-grammar</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#scope</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#catch-all</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(begin|end|while|match)\s*(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant.tm-grammar</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.tm-grammar</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>begin, end, while, match</string>
					<key>end</key>
					<string>(;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.dictionary.tm-grammar</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regexp</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#catch-all</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(include)\s*(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant.tm-grammar</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.tm-grammar</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>include</string>
					<key>end</key>
					<string>(;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.dictionary.tm-grammar</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.tm-grammar</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>constant.other.reference.repository-item.tm-grammar</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.constant.tm-grammar</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>constant.other.reference.grammar.tm-grammar</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.constant.tm-grammar</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.tm-grammar</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(')(?:((#)[-a-zA-Z0-9._]+)|((\$)(?:base|self)))?(')</string>
							<key>name</key>
							<string>string.quoted.single.include.tm-grammar</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.tm-grammar</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>constant.other.reference.repository-item.tm-grammar</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.constant.tm-grammar</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>constant.other.reference.grammar.tm-grammar</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.constant.tm-grammar</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.tm-grammar</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(')(?:((#)[-a-zA-Z0-9._]+)|((\$)(?:base|self)))?(')</string>
							<key>name</key>
							<string>string.quoted.double.include.tm-grammar</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#scope-root</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#catch-all</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b((beginC|endC|whileC|c)aptures)\s*(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant.tm-grammar</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.tm-grammar</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>captures</string>
					<key>end</key>
					<string>(;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.dictionary.tm-grammar</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.dictionary.captures.tm-grammar</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\{)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.dictionary.tm-grammar</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comment</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#string</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(=)</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.key-value.tm-grammar</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(;)</string>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.terminator.dictionary.tm-grammar</string>
										</dict>
									</dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#comment</string>
										</dict>
										<dict>
											<key>begin</key>
											<string>(\{)</string>
											<key>captures</key>
											<dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>punctuation.section.dictionary.tm-grammar</string>
												</dict>
											</dict>
											<key>end</key>
											<string>(\})</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#comment</string>
												</dict>
												<dict>
													<key>include</key>
													<string>#comment-keyword</string>
												</dict>
												<dict>
													<key>begin</key>
													<string>\b(name)\s*(=)</string>
													<key>beginCaptures</key>
													<dict>
														<key>1</key>
														<dict>
															<key>name</key>
															<string>support.constant.tm-grammar</string>
														</dict>
														<key>2</key>
														<dict>
															<key>name</key>
															<string>punctuation.separator.key-value.tm-grammar</string>
														</dict>
													</dict>
													<key>comment</key>
													<string>name</string>
													<key>end</key>
													<string>(;)</string>
													<key>endCaptures</key>
													<dict>
														<key>1</key>
														<dict>
															<key>name</key>
															<string>punctuation.terminator.dictionary.tm-grammar</string>
														</dict>
													</dict>
													<key>name</key>
													<string>meta.value-pair.tm-grammar</string>
													<key>patterns</key>
													<array>
														<dict>
															<key>include</key>
															<string>#comment</string>
														</dict>
														<dict>
															<key>include</key>
															<string>#scope</string>
														</dict>
														<dict>
															<key>include</key>
															<string>#catch-all</string>
														</dict>
													</array>
												</dict>
											</array>
										</dict>
										<dict>
											<key>include</key>
											<string>#catch-all</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>match</key>
									<string>;</string>
									<key>name</key>
									<string>punctuation.terminator.dictionary.tm-grammar</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#catch-all</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant.tm-grammar</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.tm-grammar</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.tm-grammar</string>
						</dict>
						<key>12</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.dictionary.tm-grammar</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.tm-grammar</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.tm-grammar</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.tm-grammar</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.tm-grammar</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.tm-grammar</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.tm-grammar</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.tm-grammar</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.tm-grammar</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>disabled, applyEndPatternLast</string>
					<key>match</key>
					<string>\b(disabled|applyEndPatternLast)\s*(=)\s*(?:(0|1)|((")(0|1)("))|((')(0|1)(')))\s*(;)</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#patterns</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#invalid-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.tm-grammar</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.dictionary.tm-grammar</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#any</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>punctuation.terminator.dictionary.tm-grammar</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#catch-all</string>
				</dict>
			</array>
		</dict>
		<key>scope</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.tm-grammar</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.other.scope.tm-grammar</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.other.scope.tm-grammar</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.deprecated.scope_not_allowed.tm-grammar</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.tm-grammar</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
						(')								# Open String
							(							# Optionally match the valid
														# scopes, and the following
														# part of the scope, meaning
														# anything else is invalid
								comment(?:
									\.(?:line|block)
								)?
							  | constant(?:
									\.(?:numeric|character|language|other)
								)?
							  | entity(?:
									\.name(?:
										\.(?:function|type|tag|section)
									)?
								  | \.other(?:
										\.(?:inherited-class|attribute-name)
									)?
								)?
							  | invalid(?:
									\.(?:illegal|deprecated)
								)?
							  | keyword(?:
									\.(?:control|operator|other)
								)?
							  | markup(?:
									\.(?:underline|bold|heading|italic|list|quote|raw|other)
								)?
							  | meta
							  | punctuation(?:
									\.(?:definition|section|separator|terminator|whitespace)
								)?
							  | source
							  | storage(?:
									\.(?:type|modifier)
								)?
							  | string(?:
									\.(?:
										quoted(?:
											\.(?:single|double|triple|other)
										)?
									  | (?:unquoted|interpolated|regexp|other)
									)
								)?
							  | support(?:
									\.(?:function|class|type|constant|variable|other)
								)?
							  | text
							  | variable(?:
									\.(?:parameter|language|other)
								)?
							)?
							((?&lt;!')[^\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]*(?&lt;!\.))?
							([^']*)?
						(')								# Close String
					</string>
					<key>name</key>
					<string>string.quoted.single.scope.tm-grammar</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.tm-grammar</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.other.scope.tm-grammar</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.other.scope.tm-grammar</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.deprecated.scope_not_allowed.tm-grammar</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.tm-grammar</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
						(")								# Open String
							(							# Optionally match the valid
														# scopes, and the following
														# part of the scope, meaning
														# anything else is invalid
								comment(?:
									\.(?:line|block)
								)?
							  | constant(?:
									\.(?:numeric|character|language|other)
								)?
							  | entity(?:
									\.name(?:
										\.(?:function|type|tag|section)
									)?
								  | \.other(?:
										\.(?:inherited-class|attribute-name)
									)?
								)?
							  | invalid(?:
									\.(?:illegal|deprecated)
								)?
							  | keyword(?:
									\.(?:control|operator|other)
								)?
							  | markup(?:
									\.(?:underline|bold|heading|italic|list|quote|raw|other)
								)?
							  | meta
							  | punctuation(?:
									\.(?:definition|section|separator|terminator|whitespace)
								)?
							  | source
							  | storage(?:
									\.(?:type|modifier)
								)?
							  | string(?:
									\.(?:
										quoted(?:
											\.(?:single|double|triple|other)
										)?
									  | (?:unquoted|interpolated|regexp|other)
									)
								)?
							  | support(?:
									\.(?:function|class|type|constant|variable|other)
								)?
							  | text
							  | variable(?:
									\.(?:parameter|language|other)
								)?
							)?
							((?&lt;!")[^\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]*(?&lt;!\.))?
							([^"]*)?
						(")								# Close String
					</string>
					<key>name</key>
					<string>string.quoted.double.scope.tm-grammar</string>
				</dict>
			</array>
		</dict>
		<key>scope-root</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.tm-grammar</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.other.scope.tm-grammar</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.deprecated.scope_not_allowed.tm-grammar</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.deprecated.scope_not_allowed.tm-grammar</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.tm-grammar</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(')(?:((?:source|text)\.[^\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]*)([^']*)|([^']*))(')</string>
					<key>name</key>
					<string>string.quoted.single.scope.root.tm-grammar</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.tm-grammar</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.other.scope.tm-grammar</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.deprecated.scope_not_allowed.tm-grammar</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.deprecated.scope_not_allowed.tm-grammar</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.tm-grammar</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(")(?:((?:source|text)\.[^\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]*)([^"]*)|([^"]*))(")</string>
					<key>name</key>
					<string>string.quoted.double.scope.root.tm-grammar</string>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b[0-9]+\b</string>
					<key>name</key>
					<string>constant.numeric.tm-grammar</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[-a-zA-Z0-9_.]+</string>
					<key>name</key>
					<string>string.unquoted.tm-grammar</string>
				</dict>
				<dict>
					<key>applyEndPatternLast</key>
					<integer>1</integer>
					<key>begin</key>
					<string>(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.tm-grammar</string>
						</dict>
					</dict>
					<key>end</key>
					<string>('(?!'))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.tm-grammar</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.tm-grammar</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>''</string>
							<key>name</key>
							<string>constant.character.escape.apostrophe.tm-grammar</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.tm-grammar</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.tm-grammar</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.tm-grammar</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\[\\"]</string>
							<key>name</key>
							<string>constant.character.escape.tm-grammar</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.plist.tm-grammar</string>
	<key>uuid</key>
	<string>101D6FC2-6CBD-11D9-B329-000D93347A42</string>
</dict>
</plist>
