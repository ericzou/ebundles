<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/bin/bash
#
require_cmd "${TM_SVN:=svn}" "If you have installed svn, then you need to either update your &lt;tt&gt;PATH&lt;/tt&gt; or set the &lt;tt&gt;TM_SVN&lt;/tt&gt; shell variable (e.g. in Preferences / Advanced)"

require_cmd "${TM_SVNMERGE:=svnmerge}" "If you have installed svnmerge, then you need to either update your &lt;tt&gt;PATH&lt;/tt&gt; or set the &lt;tt&gt;TM_SVNMERGE&lt;/tt&gt; shell variable (e.g. in Preferences / Advanced)"


FORMAT_LOG="${TM_BUNDLE_SUPPORT}/format_log.rb"

workpath="$TM_SELECTED_FILE"

# svnmerge calls stty if COLUMNS is not set. Apparently Python has no is_tty? equivalent.
COLUMNS=80
export COLUMNS

cd "$workpath"

# check for no or multiple HEADs
integratedRevs=`svn propget svnmerge-integrated "$workpath"`
if [[ -z "$integratedRevs" ]]; then
	pre "Merge tracking has not been initialized for '$workpath'"
	exit_discard
fi

theHead=`osascript &lt;&lt;END
	-- split heads (yes, svnmerge uses spaces to delimit; hopefully spaces in filenames get URI-style encoded, but I haven't checked)
	set AppleScript's text item delimiters to {" "}
	set theList to (every text item of "$integratedRevs")

	-- split head names from associated revision numbers
	set theHeads to {}
	set AppleScript's text item delimiters to {":"}
	repeat with i from 1 to the count of theList
		set theHeads to (theHeads &amp; (text item 1 of (item i of theList)))
	end

	if the count of theHeads is greater than 1 then
		tell app "TextMate"
			choose from list theHeads with prompt "Please choose the HEAD directory for '$workpath':"
		end tell
	else if the count of theHeads is 1 then
		set the result to item 1 of theHeads
	else
		set the result to false
	end if
END`

# exit if user canceled
[[ "$theHead" = "false" ]] &amp;&amp; exit_discard


"$TM_SVNMERGE" avail --log -S "`basename $theHead`" 2&gt;&amp;1 \
	| "${TM_RUBY:=ruby}" -- "$FORMAT_LOG" '--title=Revisions Available for Merging'
</string>
	<key>input</key>
	<string>none</string>
	<key>keyEquivalent</key>
	<string>^A</string>
	<key>name</key>
	<string> Show Available Revisions for Merging</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>uuid</key>
	<string>BA4B9C28-6566-46E8-8482-9A52DCB5384D</string>
</dict>
</plist>
