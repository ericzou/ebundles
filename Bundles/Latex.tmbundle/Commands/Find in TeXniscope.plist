<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string># If TM_LATEX_MASTER is not set use TM_FILEPATH
: ${TM_LATEX_MASTER:=$TM_FILEPATH}

# Switch to the right directory
cd "${TM_PROJECT_DIRECTORY:-$TM_DIRECTORY}"
cd "$(dirname "$TM_LATEX_MASTER")"
PDF="${TM_LATEX_MASTER%.tex}.pdf"
V=${TM_LATEX_VIEWER%.app} # strip potential .app extension
if find_app &gt;/dev/null "$V.app"; then
  open -a "$V" "$PDF"
fi
if [[ "$V" == TeXniscope ]]; then
  SCRIPT="$(find_app TeXniscope.app)/Contents/Resources/forward-search.sh"
  if [[ -x "$SCRIPT" ]]; then
  	"$SCRIPT" &amp;&gt;/dev/console "$TM_LINE_NUMBER" "$TM_FILEPATH" "$PDF"
  else
  	echo "Unable to locate $V."
  fi
else
  if [[ "$V" == PDFView ]]; then
  SCRIPT="$(find_app PDFView.app)/Contents/Resources/forward-search.sh"
    if [[ -x "$SCRIPT" ]]; then
      "$SCRIPT" &amp;&gt;/dev/console "$TM_LINE_NUMBER" "$TM_FILEPATH" "$PDF"
    else
      echo "Unable to locate $V."
    fi
  fi
  if [[ "$V" == Skim ]]; then
  SCRIPT="$(find_app Skim.app)/Contents/Resources/displayline"
    if [[ -x "$SCRIPT" ]]; then
      "$SCRIPT" &amp;&gt;/dev/console "$TM_LINE_NUMBER" "$PDF" "$TM_FILEPATH"
    else
      echo "Unable to locate $V."
    fi
  fi
fi


</string>
	<key>input</key>
	<string>none</string>
	<key>keyEquivalent</key>
	<string>^~@o</string>
	<key>name</key>
	<string>Show in PDF Viewer (pdfsync)</string>
	<key>output</key>
	<string>showAsTooltip</string>
	<key>scope</key>
	<string>text.tex.latex</string>
	<key>uuid</key>
	<string>D8B2D295-AD3C-11D9-BD97-000D93B6E43C</string>
</dict>
</plist>
