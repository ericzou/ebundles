<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    <dict>
        <key>beforeRunningCommand</key>
        <string>saveModifiedFiles</string>
        <key>command</key>
        <string>#!/usr/bin/env ruby

$tags = [
  { :label =&gt; &quot;FIXME&quot;,   :color =&gt; &quot;#A00000&quot;, :regexp =&gt; /FIX ?ME[\s,:]+(\S.*)$/i },
  { :label =&gt; &quot;TODO&quot;,    :color =&gt; &quot;#CF830D&quot;, :regexp =&gt; /TODO[\s,:]+(\S.*)$/i    },
  { :label =&gt; &quot;CHANGED&quot;, :color =&gt; &quot;#008000&quot;, :regexp =&gt; /CHANGED[\s,:]+(\S.*)$/  },
  { :label =&gt; &quot;RADAR&quot;,   :color =&gt; &quot;#0090C8&quot;, :regexp =&gt; /(.*&lt;)ra?dar:\/(?:\/problem|)\/([&amp;0-9]+)(&gt;.*)$/, :trim_if_empty =&gt; true },
]

if RUBY_VERSION =~ /^1\.6\./ then
  puts &lt;&lt;-HTML
&lt;p&gt;Sorry, but this function requires Ruby 1.8.&lt;/p&gt;
&lt;p&gt;If you do have Ruby 1.8 installed (default for Tiger users) then you need to setup the path variable in &lt;tt&gt; ~/.MacOSX/environment.plist&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;For detailed instructions see &lt;a href=&quot;http://macromates.com/textmate/manual/shell_commands#search_path&quot;&gt;the manual&lt;/a&gt; (scroll down to the paragraph starting with &lt;em&gt;Important&lt;/em&gt;.)&lt;/p&gt;
HTML
  abort
end

require &quot;#{ENV[&apos;TM_SUPPORT_PATH&apos;]}/lib/plist&quot;
require &quot;#{ENV[&apos;TM_SUPPORT_PATH&apos;]}/lib/textmate&quot;
require &quot;erb&quot;
include ERB::Util

def TextMate.file_link (file, line = 0)
  return &quot;txmt://open/?url=file://&quot; +
    file.gsub(/[^a-zA-Z0-9.-\/]/) { |m| sprintf(&quot;%%%02X&quot;, m[0]) } +
    &quot;&amp;amp;line=&quot; + line.to_s
end

# setup empty array for per tag results
$tags.each { |tag| tag[:matches] = [ ] }

TextMate.each_text_file do |file|
  $tags.each do |tag|
    File.open(file) do |io|
      io.grep(tag[:regexp]) do |content|
        results = {
          :file =&gt; file,
          :line =&gt; io.lineno,
          :content =&gt; content
        }
        if tag[:label] == &quot;RADAR&quot; then
          url = &quot;rdar://&quot; + $2
          results[:match] = html_escape($1) + &quot;&lt;a href=\&quot;&quot; + url + &quot;\&quot;&gt;&quot; + html_escape(url) + &quot;&lt;/a&gt;&quot; + html_escape($3)
        else
          results[:match] = html_escape($1)
        end
        tag[:matches] &lt;&lt; results
      end
    end
  end
end

# trim tags that didn&apos;t match, if requested
$tags.delete_if { |tag| tag[:trim_if_empty] and tag[:matches].empty? }

tmpl_file = &quot;#{ENV[&apos;TM_BUNDLE_SUPPORT&apos;]}/template.rhtml&quot;
puts ERB.new(File.open(tmpl_file), 0, &apos;&lt;&gt;&apos;).result
</string>
        <key>input</key>
        <string>none</string>
        <key>keyEquivalent</key>
        <string>^T</string>
        <key>name</key>
        <string>Show TODO List</string>
        <key>output</key>
        <string>showAsHTML</string>
        <key>uuid</key>
        <string>14C1643E-7D51-11D9-859D-000D93B6E43C</string>
        <key>winCommand</key>
        <string>#!/usr/bin/env ruby

$tags = [
  { :label =&gt; &quot;FIXME&quot;,   :color =&gt; &quot;#A00000&quot;, :regexp =&gt; /FIX ?ME[\s,:]+(\S.*)$/i },
  { :label =&gt; &quot;TODO&quot;,    :color =&gt; &quot;#CF830D&quot;, :regexp =&gt; /TODO[\s,:]+(\S.*)$/i    },
  { :label =&gt; &quot;CHANGED&quot;, :color =&gt; &quot;#008000&quot;, :regexp =&gt; /CHANGED[\s,:]+(\S.*)$/  },
  { :label =&gt; &quot;RADAR&quot;,   :color =&gt; &quot;#0090C8&quot;, :regexp =&gt; /(.*&lt;)ra?dar:\/(?:\/problem|)\/([&amp;0-9]+)(&gt;.*)$/, :trim_if_empty =&gt; true },
]

if RUBY_VERSION =~ /^1\.6\./ then
  puts &lt;&lt;-HTML
&lt;p&gt;Sorry, but this function requires Ruby 1.8.&lt;/p&gt;
&lt;p&gt;If you do have Ruby 1.8 installed (default for Tiger users) then you need to setup the path variable in &lt;tt&gt; ~/.MacOSX/environment.plist&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;For detailed instructions see &lt;a href=&quot;http://macromates.com/textmate/manual/shell_commands#search_path&quot;&gt;the manual&lt;/a&gt; (scroll down to the paragraph starting with &lt;em&gt;Important&lt;/em&gt;.)&lt;/p&gt;
HTML
  abort
end

require &quot;#{ENV[&apos;TM_SUPPORT_PATH&apos;]}/lib/plist&quot;
require &quot;#{ENV[&apos;TM_SUPPORT_PATH&apos;]}/lib/textmate&quot;
require &quot;erb&quot;
include ERB::Util

def TextMate.file_link (file, line = 0)
  return &quot;txmt://open/?url=file://&quot; + file + &quot;&amp;amp;line=&quot; + line.to_s
end

# setup empty array for per tag results
$tags.each { |tag| tag[:matches] = [ ] }

TextMate.each_text_file do |file|
  $tags.each do |tag|
    File.open(file) do |io|
      io.grep(tag[:regexp]) do |content|
        results = {
          :file =&gt; file,
          :line =&gt; io.lineno,
          :content =&gt; content
        }
        if tag[:label] == &quot;RADAR&quot; then
          url = &quot;rdar://&quot; + $2
          results[:match] = html_escape($1) + &quot;&lt;a href=\&quot;&quot; + url + &quot;\&quot;&gt;&quot; + html_escape(url) + &quot;&lt;/a&gt;&quot; + html_escape($3)
        else
          results[:match] = html_escape($1)
        end
        tag[:matches] &lt;&lt; results
      end
    end
  end
end

# trim tags that didn&apos;t match, if requested
$tags.delete_if { |tag| tag[:trim_if_empty] and tag[:matches].empty? }

tmpl_file = &quot;#{ENV[&apos;TM_BUNDLE_SUPPORT&apos;]}/template.rhtml&quot;
puts ERB.new(File.open(tmpl_file), 0, &apos;&lt;&gt;&apos;).result
</string>
    </dict>
</plist>
