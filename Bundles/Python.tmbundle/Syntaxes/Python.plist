<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>py</string>
		<string>rpy</string>
		<string>cpy</string>
		<string>SConstruct</string>
		<string>Sconstruct</string>
		<string>sconstruct</string>
		<string>SConscript</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!/.*\bpython\b</string>
	<key>foldingStartMarker</key>
	<string>^\s*(def|class)\s+([.a-zA-Z0-9_ b]+)\s*(\((.*)\))?\s*:|\{\s*$|\(\s*$|\[\s*$|^\s*"""(?=.)(?!.*""")</string>
	<key>foldingStopMarker</key>
	<string>^\s*$|^\s*\}|^\s*\]|^\s*\)|^\s*"""\s*$</string>
	<key>keyEquivalent</key>
	<string>^~P</string>
	<key>name</key>
	<string>Python</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.empty-string.double.py</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;!")"(")(?!")</string>
			<key>name</key>
			<string>string.quoted.double.py</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.empty-string.single.py</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;!')'(')(?!')</string>
			<key>name</key>
			<string>string.quoted.single.py</string>
		</dict>
		<dict>
			<key>disabled</key>
			<string>1</string>
			<key>match</key>
			<string>( |	)+$</string>
			<key>name</key>
			<string>invalid.deprecated.trailing-whitespace</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(break|continue|elif|else|except|finally|for|if|pass|raise|return|try|while|yield)\b</string>
			<key>name</key>
			<string>keyword.control.py</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(and|as|assert|del|exec|global|lambda|in|is|not|or|print)\b</string>
			<key>name</key>
			<string>keyword.operator.py</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bimport\b</string>
			<key>name</key>
			<string>keyword.control.import.py</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bfrom\b</string>
			<key>name</key>
			<string>keyword.control.import.from.py</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(True|False|None|Ellipsis)\b</string>
			<key>name</key>
			<string>constant.language.py</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(self|cls)\b</string>
			<key>name</key>
			<string>variable.language.py</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:((0x\h*)|(\d+\.?\d*|\.\d+)(e[-+]?\d+)?)(l|u|f|ul)?j?)\b</string>
			<key>name</key>
			<string>constant.numeric.py</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(bool|dict|float|hex|int|list|long|oct|str|tuple)\b</string>
			<key>name</key>
			<string>support.type.py</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(__debug__|__import__|__name__|abs|apply|basestring|bool|buffer|callable|chr|classmethod|cmp|coerce|compile|complex|copyright|delattr|dict|dir|divmod|enumerate|eval|execfile|exit|file|filter|float|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|license|list|locals|long|map|max|min|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b</string>
			<key>name</key>
			<string>support.function.py</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b__(bases|dict|doc|file|name|path|self)__\b</string>
			<key>name</key>
			<string>support.constant.py</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((Arithmetic|Assertion|Attribute|EOF|Environment|FloatingPoint|IO|Import|Indentation|Index|Key|Lookup|Memory|Name|OS|Overflow|NotImplemented|Reference|Runtime|Standard|Syntax|System|Tab|Type|UnboundLocal|Unicode(Translate|Encode|Decode)?|Value|ZeroDivision)Error|(Deprecation|Future|Overflow|PendingDeprecation|Runtime|Syntax|User)?Warning|KeyboardInterrupt|NotImplemented|StopIteration|SystemExit|(Base)?Exception)\b</string>
			<key>name</key>
			<string>support.class.exception.py</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^\s*@([a-zA-Z_][a-zA-Z_0-9]*)(\.\g&lt;1&gt;)*(\(.*\))?</string>
			<key>name</key>
			<string>meta.function.decorator.py</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(def)\s+(__(add|aepack|and|call|cmp|coerce|complex|contains|copy|deepcopy|delattr|delete|delitem|delslice|del|divmod|div|eq|float|floordiv|getattribute|getattr|getinitargs|getitem|getnewargs|getslice|getstate|get|ge|GNUC|gt|hash|iadd|iand|idiv|ifloordiv|ilshift|imod|imul|init|int|ior|ipow|irshift|isub|iter|itruediv|ixor|len|le|long|lshift|lt|main|mod|mul|newobj|new|ne|nonzero|or|pow|radd|rand|rdivmod|rdiv|reduce|repr|rfloordiv|rlshift|rmod|rmul|ror|rpow|rrshift|rshift|rsub|rtruediv|rxor|setattr|setitem|setslice|setstate|setup|set|str|sub|truediv|unicode|xor)__)\s*\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.py</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.py</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)\s*:</string>
			<key>name</key>
			<string>meta.function.operator.py</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.language.py</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(self|cls)\b</string>
					<key>name</key>
					<string>variable.parameter.function.py</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[a-zA-Z_][a-zA-Z0-9_]*\b</string>
					<key>name</key>
					<string>variable.parameter.function.py</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>=</string>
					<key>end</key>
					<string>,|(?=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$base</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(def)\s+([a-zA-Z_][a-zA-Z_0-9]*)\s*\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.py</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.py</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)\s*:</string>
			<key>name</key>
			<string>meta.function.py</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.language.py</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(self|cls)\b</string>
					<key>name</key>
					<string>variable.parameter.function.py</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[a-zA-Z_][a-zA-Z0-9_]*\b</string>
					<key>name</key>
					<string>variable.parameter.function.py</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>=</string>
					<key>end</key>
					<string>,|(?=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$base</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(class)\s+([a-zA-Z_][a-zA-Z_0-9]*)\s*(\()?</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.py</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.py</string>
				</dict>
			</dict>
			<key>end</key>
			<string>[)]?\s*:</string>
			<key>name</key>
			<string>meta.class.py</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[^\):]+</string>
					<key>name</key>
					<string>entity.other.inherited-class.py</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>#.*$\n?</string>
			<key>name</key>
			<string>comment.line.number-sign.py</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\b(?i:r|u|ur))?'''[^']*</string>
			<key>end</key>
			<string>'(')'</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.close.string.quoted.single.py</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.multiline.py</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#doctest</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\b(?i:r|u|ur))?"""[^"]*</string>
			<key>end</key>
			<string>"(")"</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.close.string.quoted.double.py</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.multiline.py</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#doctest</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\b(?i:r|u|ur))?'(?=.*([\\$]|'))</string>
			<key>end</key>
			<string>'|(?&lt;!\\)(?:\\\\)*(\n)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.open-string.py</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.py</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\b(?i:r|u|ur))?"</string>
			<key>end</key>
			<string>"|(?&lt;!\\)(?:\\\\)*(\n)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.open-string.py</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.py</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_placeholder</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\s*\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.function-call.py</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>constant_placeholder</key>
		<dict>
			<key>match</key>
			<string>%(%|(\([a-zA-Z_]+\))?(0|\-|\+)?([0-9\.]*)?[diuoxXfeEgGsrc])</string>
			<key>name</key>
			<string>constant.other.placeholder.py</string>
		</dict>
		<key>doctest</key>
		<dict>
			<key>begin</key>
			<string>\s(&gt;&gt;&gt;) </string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.doctest.py</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\n</string>
			<key>name</key>
			<string>meta.scope.doctest.py</string>
		</dict>
		<key>escaped_char</key>
		<dict>
			<key>match</key>
			<string>\\.</string>
			<key>name</key>
			<string>constant.character.escape.py</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.python</string>
	<key>uuid</key>
	<string>F23DB5B2-7D08-11D9-A709-000D93B6E43C</string>
</dict>
</plist>
